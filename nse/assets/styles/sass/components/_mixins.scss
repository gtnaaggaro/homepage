/*Path*/
$assetPath: '../images/';

/*Colors*/
$maroon: #ad1e23;
$orange: #f37e20;
$blue: #074a86;
$white: #fff;
$black: #000;
$textGrey: #4B4B4B;
$textGreyLight: #A6A6A6;
$textGreyLight1: #AFAFAF;
$textGreyLight2: #FFF7EB;
$grey1: #D1CFBB;
$grey2: #646464;
$grey3: #333;
$grey4: #f6f6f6;
$grey5: #8B8B8B;
$grey6: #f9f9f9;
$grey7: #fdfdfd;
$grey8: #BDBDBD;
$grey9: #DEDEDE;
$grey10: #C4C4C4;
$grey11: #E6E6E6;
$grey12: #929292;
$grey13: #626262;
$grey14: #818181;
$grey15: #E9E7E7;
$grey16: #FDF6F4;
$grey17: #F2F5F6;
$grey18: #EBE7E7;
$bgGrey: #FAFAF6;
$darkGrey: #3D3D3D;
$darkGrey2: #737373;
$menuTitle: #364255;
$menuListItem: #828282;
$green : #3FC41D;
$green1 : #219653;
$red: #A41906;
$red1: #E6371F;
$lightorange: #FFF0E6;


/*Other*/
$max-width: 1260px;

// @font-face {
//   font-family: 'Helvetica-Regular';
//   src: url('../fonts/helvetica-webfont.eot');
//   src: url('../fonts/helvetica-webfont.eot?#iefix') format('embedded-opentype'),
//        url('../fonts/helvetica-webfont.svg#Helvetica') format('svg'),
//        url('../fonts/helvetica-webfont.ttf') format('truetype'),
//        url('../fonts/helvetica-webfont.woff') format('woff'),
//        url('../fonts/helvetica-webfont.woff2') format('woff2');
//   font-weight: normal;
//   font-style: normal;
// }

// @font-face {
// 	font-family: 'Helvetica-Medium';
// 	src: url('../fonts/helvetica-medium-webfont.eot');
// 	src: url('../fonts/helvetica-medium-webfont.eot?#iefix') format('embedded-opentype'),
// 			 url('../fonts/helvetica-medium-webfont.woff2') format('woff2'),
// 			 url('../fonts/helvetica-medium-webfont.woff') format('woff'),
// 			 url('../fonts/helvetica-medium-webfont.ttf') format('truetype'),
// 			 url('../fonts/helvetica-medium-webfont.svg#helvetica_mediumregular') format('svg');
// 	font-weight: normal;
// 	font-style: normal;
// }

// @font-face {
// 	font-family: 'Helvetica-Bold';
// 	src: url('../fonts/helvetica_bold-webfont.eot');
// 	src: url('../fonts/helvetica_bold-webfont.eot?#iefix') format('embedded-opentype'),
// 			 url('../fonts/helvetica_bold-webfont.woff2') format('woff2'),
// 			 url('../fonts/helvetica_bold-webfont.woff') format('woff'),
// 			 url('../fonts/helvetica_bold-webfont.ttf') format('truetype'),
// 			 url('../fonts/helvetica_bold-webfont.svg#helveticabold') format('svg');
// 	font-weight: normal;
// 	font-style: normal;
// }

$font-family: 'Open Sans', sans-serif;
// $font: $font-family;
// $font-med: 'Helvetica-Medium', Arial, Sans-serif;
// $font-bold: 'Helvetica-Bold', Arial, Sans-serif;

/********** Mixins **********/

@mixin clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}


/********** Vendor prefixing eg: -webkit-, -moz-, -ms-, -o- **********/

@mixin prefix($property, $value, $vendors: webkit moz ms o, $default: true) {
	@if $vendors {
		@each $vendor in $vendors {
			#{"-" + $vendor + "-" + $property}: #{$value};
		}
	}
	@if $default {
		#{$property}: #{$value};
	}
}

@mixin container-position {
	max-width: $max-width;
	width: 100%;
	margin: 0 auto;
	padding: 0 20px;
}

@mixin radius($radius) {
	@include prefix('border-radius', $radius);
}

@mixin transition($transition) {
	@include prefix('transition', $transition);
}

@mixin shadow($shadow) {
	@include prefix('box-shadow', $shadow);
}

@mixin opacity($opacity) {
	opacity: $opacity;
	$opacity-ie: $opacity * 100;
	filter: alpha(opacity=$opacity-ie); //IE8
}


/*Pseudo eg: &::before, &::after*/

@mixin pseudo($display: block, $pos: absolute, $content: '') {
	content: $content;
	display: $display;
	position: $pos;
}

@mixin transform($property) {
	@include prefix('transform', $property);
}


/*horizontally & vertically centering*/

@mixin center-vertically {
	position: absolute;
	top: 50%;
	left: 50%;
	@include prefix(transform, translate(-50%, -50%), 'webkit''ms');
}


/********** Keyframes **********/

@mixin keyframes($name) {
	@-webkit-keyframes #{$name} {
		@content;
	}
	@-moz-keyframes #{$name} {
		@content;
	}
	@-ms-keyframes #{$name} {
		@content;
	}
	@-o-keyframes #{$name} {
		@content;
	}
	@keyframes #{$name} {
		@content;
	}
}


/********** Media queries **********/

$breakpoints: ("phone": 400px, "phone-wide": 480px, "phablet": 560px, "tablet-small": 640px, "tablet": 768px, "tablet-wide": 1024px, "desktop": 1250px, "desktop-wide": 1440px);
@mixin mq($width, $type: max) {
	@media only screen and (#{$type}-width: $width) {
		@content;
	}
	@if map_has_key($breakpoints, $width) {
		$width: map_get($breakpoints, $width);
		@if $type==max {
			$width: $width - 1px;
		}
		@media only screen and (#{$type}-width: $width) {
			@content;
		}
	}
}


/********** Mixin for Flex **********/
@mixin display-flex($is-important: null) {
	display: -ms-flexbox $is-important;
	display: -webkit-flex $is-important;
	display: flex $is-important;
}

@mixin flex-justify-content($justify-content) {
	justify-content: $justify-content;
	-webkit-justify-content: $justify-content;
	@if($justify-content==space-around) {
		-ms-flex-pack: distribute;
	}
	@else if($justify-content==space-between) {
		-ms-flex-pack: justify;
	}
	@else if($justify-content==flex-end) {
		-ms-flex-pack: end;
	}
	@else if($justify-content==flex-start) {
		-ms-flex-pack: start;
	}
	@else {
		-ms-flex-pack: $justify-content;
	}
}

@mixin flex-align-items($align-items) {
	align-items: $align-items;
	-webkit-align-items: $align-items;
	@if($align-items==flex-end) {
		-ms-flex-align: end;
	}
	@else if($align-items==flex-start) {
		-ms-flex-align: start;
	}
	@else {
		-ms-flex-align: $align-items;
	}
}

@mixin flex-align-self($align-self) {
	align-self: $align-self;
	-webkit-align-self: $align-self;
	@if($align-self==flex-start) {
		-ms-flex-item-align: start;
	}
	@else if($align-self==flex-end) {
		-ms-flex-item-align: end;
	}
	@else {
		-ms-flex-item-align: $align-self;
	}
}

@mixin flex-direction($direction) {
	flex-direction: $direction;
	-webkit-flex-direction: $direction;
}

@mixin flex-position($align-items, $justify-content, $is-important: null) {
	@include display-flex($is-important);
	@include flex-justify-content($justify-content);
	@include flex-align-items($align-items);
}

@mixin flex-wrap($wrap-val) {
	flex-wrap: $wrap-val;
	-webkit-flex-wrap: $wrap-val;
	@if($wrap-val==nowrap) {
		-ms-flex-wrap: none;
	}
	@else {
		-ms-flex-wrap: $wrap-val;
	}
}

@mixin flex($value) {
	-webkit-flex: $value;
	-ms-flex: $value;
	flex: $value;
}